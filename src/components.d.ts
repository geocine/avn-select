/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface AvnSelect {
      'disabled': boolean;
      'options': any;
      'placeholder': string;
      'selectedValue': string;
      'value': any;
    }
  }

  interface HTMLAvnSelectElement extends StencilComponents.AvnSelect, HTMLStencilElement {}

  var HTMLAvnSelectElement: {
    prototype: HTMLAvnSelectElement;
    new (): HTMLAvnSelectElement;
  };
  interface HTMLElementTagNameMap {
    'avn-select': HTMLAvnSelectElement;
  }
  interface ElementTagNameMap {
    'avn-select': HTMLAvnSelectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'avn-select': JSXElements.AvnSelectAttributes;
    }
  }
  namespace JSXElements {
    export interface AvnSelectAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'onChange'?: (event: CustomEvent) => void;
      'options'?: any;
      'placeholder'?: string;
      'selectedValue'?: string;
      'value'?: any;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;